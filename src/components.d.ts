/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';


declare global {

  namespace StencilComponents {
    interface BinaryClockHour {

    }
  }

  interface HTMLBinaryClockHourElement extends StencilComponents.BinaryClockHour, HTMLStencilElement {}

  var HTMLBinaryClockHourElement: {
    prototype: HTMLBinaryClockHourElement;
    new (): HTMLBinaryClockHourElement;
  };
  interface HTMLElementTagNameMap {
    'binary-clock-hour': HTMLBinaryClockHourElement;
  }
  interface ElementTagNameMap {
    'binary-clock-hour': HTMLBinaryClockHourElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'binary-clock-hour': JSXElements.BinaryClockHourAttributes;
    }
  }
  namespace JSXElements {
    export interface BinaryClockHourAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface BinaryClockMinutes {

    }
  }

  interface HTMLBinaryClockMinutesElement extends StencilComponents.BinaryClockMinutes, HTMLStencilElement {}

  var HTMLBinaryClockMinutesElement: {
    prototype: HTMLBinaryClockMinutesElement;
    new (): HTMLBinaryClockMinutesElement;
  };
  interface HTMLElementTagNameMap {
    'binary-clock-minutes': HTMLBinaryClockMinutesElement;
  }
  interface ElementTagNameMap {
    'binary-clock-minutes': HTMLBinaryClockMinutesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'binary-clock-minutes': JSXElements.BinaryClockMinutesAttributes;
    }
  }
  namespace JSXElements {
    export interface BinaryClockMinutesAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface BinaryClockSeconds {

    }
  }

  interface HTMLBinaryClockSecondsElement extends StencilComponents.BinaryClockSeconds, HTMLStencilElement {}

  var HTMLBinaryClockSecondsElement: {
    prototype: HTMLBinaryClockSecondsElement;
    new (): HTMLBinaryClockSecondsElement;
  };
  interface HTMLElementTagNameMap {
    'binary-clock-seconds': HTMLBinaryClockSecondsElement;
  }
  interface ElementTagNameMap {
    'binary-clock-seconds': HTMLBinaryClockSecondsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'binary-clock-seconds': JSXElements.BinaryClockSecondsAttributes;
    }
  }
  namespace JSXElements {
    export interface BinaryClockSecondsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface BinaryClock {

    }
  }

  interface HTMLBinaryClockElement extends StencilComponents.BinaryClock, HTMLStencilElement {}

  var HTMLBinaryClockElement: {
    prototype: HTMLBinaryClockElement;
    new (): HTMLBinaryClockElement;
  };
  interface HTMLElementTagNameMap {
    'binary-clock': HTMLBinaryClockElement;
  }
  interface ElementTagNameMap {
    'binary-clock': HTMLBinaryClockElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'binary-clock': JSXElements.BinaryClockAttributes;
    }
  }
  namespace JSXElements {
    export interface BinaryClockAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface BinaryElem {
      'pos': string;
      'updateElement': (active: boolean) => void;
    }
  }

  interface HTMLBinaryElemElement extends StencilComponents.BinaryElem, HTMLStencilElement {}

  var HTMLBinaryElemElement: {
    prototype: HTMLBinaryElemElement;
    new (): HTMLBinaryElemElement;
  };
  interface HTMLElementTagNameMap {
    'binary-elem': HTMLBinaryElemElement;
  }
  interface ElementTagNameMap {
    'binary-elem': HTMLBinaryElemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'binary-elem': JSXElements.BinaryElemAttributes;
    }
  }
  namespace JSXElements {
    export interface BinaryElemAttributes extends HTMLAttributes {
      'pos'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;